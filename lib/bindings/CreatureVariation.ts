// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { CreatureVariationRule } from "./CreatureVariationRule";
import type { RawMetadata } from "./RawMetadata";

export type CreatureVariation = {
  /**
   * Common Raw file Things
   */
  metadata: RawMetadata | null;
  identifier: string;
  objectId: string;
  /**
   * Creature variations are basically just a set of simple tag actions which are applied to
   * the creature which is being modified. The tags are applied in order EXCEPT for the convert
   * tags which are applied in a reverse order.
   */
  rules: Array<CreatureVariationRule>;
  /**
   * A creature variation can define any number of arguments which can be used in the rules.
   * These arguments replace instances of `!ARGn` in the rules. Use `apply_arguments` to apply
   * a set of arguments to a creature variation (and get a very specific variation back). Use
   * `apply_to_creature` to apply the variation to a creature (it also takes arguments and will
   * apply them to the variation before applying the variation to the creature).
   */
  argumentCount: number;
};
