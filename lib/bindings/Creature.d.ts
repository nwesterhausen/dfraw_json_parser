// File generated by specta. Do not edit!
//
/// lib/dfraw_json_parser::creature::Creature

/**
 * The `Creature` struct represents a creature in a Dwarf Fortress, with the properties
 * that can be set in the raws. Not all the raws are represented here, only the ones that
 * are currently supported by the library.
 *
 * Some items like `CREATURE_VARIATION` and `CREATURE_VARIATION_CASTE` are saved in their raw
 * format. `SELECT_CREATURE` is saved here as a sub-creature object with all the properties
 * from that raw. This is because the `SELECT_CREATURE` raws are used to create new creatures
 * based on the properties of the creature they are applied to. But right now the application
 * of those changes is not applied, in order to preserve the original creature. So instead,
 * they are saved and can be applied later (at the consumer's discretion).
 */
export type Creature = {
  metadata: Metadata | null;
  identifier: string;
  castes: Caste[];
  tags: CreatureTag[] | null;
  biomes: Biome[] | null;
  prefStrings: string[] | null;
  tile: Tile | null;
  frequency: number | null;
  clusterNumber: number[] | null;
  populationNumber: number[] | null;
  undergroundDepth: number[] | null;
  generalBabyName: SingPlurName | null;
  generalChildName: SingPlurName | null;
  name: Name;
  copyTagsFrom: string | null;
  applyCreatureVariation: string[] | null;
  objectId: string;
  selectCreatureVariation: SelectCreature[] | null;
};
