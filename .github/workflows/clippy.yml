on:
  - push
  - pull_request
name: Test Suite
permissions: read-all
env:
  CARGO_TERM_COLOR: always
  # sccache enablement
  SCCACHE_GHA_ENABLED: true
  RUSTC_WRAPPER: sccache

jobs:
  clippy_check:
    name: Clippy Check
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Install dependencies (for 'tauri' flag)
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install -y javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # 0.0.4
      - uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a # master
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: stable
          components: clippy
      - name: Build
        run: cargo build
      - name: Show sccache stats
        shell: bash
        run: |
          echo '## SCCACHE STATS' >> $GITHUB_STEP_SUMMARY
          echo '| Metric | Value |' >> $GITHUB_STEP_SUMMARY
          echo '|--------|-------|' >> $GITHUB_STEP_SUMMARY
          ${SCCACHE_PATH} --show-stats | awk -F'[[:space:]][[:space:]]+' 'NR<=22{ print "| "$1" | "$2" |"}' >> $GITHUB_STEP_SUMMARY
          echo '</hr>' >> $GITHUB_STEP_SUMMARY
      - name: Run clippy
        run: cargo clippy -- -D warnings
  verify_bindings:
    name: Verify Type Bindings
    needs: clippy_check
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Install dependencies (for 'tauri' flag)
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
              build-essential \
              curl \
              wget \
              file \
              libssl-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev
          sudo apt-get install -y javascriptcoregtk-4.1 \
              libsoup-3.0 \
              webkit2gtk-4.1
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # 0.0.4
      - uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a # master
        with:
          targets: x86_64-unknown-linux-gnu
          toolchain: stable

      - name: Install bun
        uses: oven-sh/setup-bun@f4d14e03ff726c06358e5557344e1da148b56cf7 #v1
      - name: Generate Type Bindings
        run: |
          cargo build
          cargo test --all-features
          bunx @biomejs/biome format --write lib/bindings/*.ts
      - name: Check for changes
        run: |
          git diff --exit-code
  test_parsing:
    name: Test Parsing
    needs: clippy_check
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Vanilla Raws Cache
        id: vanilla-raws-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          key: vanilla-raws-${{ vars.DF_VERSION }}
          path: /home/runner/vanilla-raws
      - name: Download Vanilla Raws Bundle
        if: ${{ steps.vanilla-raws-cache.outputs.cache-hit != 'true' }}
        run: |
          wget -O vanilla-raws.zip https://build-deps.ci.nwest.one/dwarffortress/vanilla_${{ vars.DF_VERSION }}.zip
          unzip -d /home/runner/vanilla-raws vanilla-raws.zip

      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # 0.0.4
      - uses: dtolnay/rust-toolchain@d8352f6b1d2e870bc5716e7a6d9b65c4cc244a1a # master
        with:
          toolchain: stable

      - name: Build CLI
        run: cargo build

      # TODO: Add various parsing scenarios (e.g. a single raw, an entire module, all vanilla, the info.txt files, etc.)
      # The idea being the logs from the parsing tests will be useful for reference
      # `cargo run` will run the cli automatically

      - name: Parse creature_birds.txt with creature variation support
        run:
          cargo run -- -r /home/runner/vanilla-raws/vanilla_creatures/objects/creature_birds.txt -r
          /home/runner/vanilla-raws/vanilla_creatures/objects/c_variation_default.txt
